1.            >>> print ("hello")
              hello
              >>> print ('h')
              h
              >>> m=hello
              Traceback (most recent call last):
                File "<pyshell#2>", line 1, in <module>
                  m=hello
              NameError: name 'hello' is not defined
              >>> m='hello'
              >>> print (m)
              hello
              >>> a='I like '
              >>> b='sleeping'
              >>> print (a.title()+b+'!')
              I Like sleeping!
              >>> a[0]
              'I'
              >>> a[-2]
              'e'
              >>> #对于字符串，python可以用负数引用
              >>> a[-1]
              ' '
              >>> a[1:7]
              ' like '
              >>> #可以通过以上格式引用一段范围的字符
              >>> 0.1+0.2
              0.30000000000000004
              >>> 0.1+0.1
              0.2
              >>> c=2021
              >>> print ("a+str(c-1)+'!'")
              a+str(c-1)+'!'
              >>> print (a+str(c-1)+'!')         #alt+p==直接获取复制上一条代码
              I like 2020!
              >>> #用str可以把数字转换为字符串
              >>> [a,b]
              ['I like ', 'sleeping']
              >>> [q,ew,r]
              Traceback (most recent call last):
                File "<pyshell#21>", line 1, in <module>
                  [q,ew,r]
              NameError: name 'q' is not defined
              >>> ['q','w']
              ['q', 'w']
              >>> [12,35,6]
              [12, 35, 6]
              >>> 'I like sleeping'.split()
              ['I', 'like', 'sleeping']
              >>> #split方法可以根据空格分成列表
              >>> print ("hello")             #alt+n复制下一条（python是循环结构），即开头第一句（在下面无代码的情况下）
              hello




2.              >>> a=['1','2','3','4','5']
                >>> a[0]
                '1'
                >>> #python用【】表示列表
                >>> a[-1]
                '5'
                >>> a[0]=100
                >>> a
                [100, '2', '3', '4', '5']
                >>> #可以通过以上方式实现列表内容的替换
                >>> a.append(6)
                >>> a
                [100, '2', '3', '4', '5', 6]
                >>> a.insert(0,1)
                >>> a
                [1, 100, '2', '3', '4', '5', 6]
                >>> a.remove('100')
                Traceback (most recent call last):
                  File "<pyshell#11>", line 1, in <module>
                    a.remove('100')
                ValueError: list.remove(x): x not in list
                >>> a.remove(100)
                >>> a
                [1, '2', '3', '4', '5', 6]
                >>> #从以上操作可以看出：用append在列表尾部添加元素，用insert在指定位置添加元素，用remove删除指定元素
                >>> a.sort()
                Traceback (most recent call last):
                  File "<pyshell#15>", line 1, in <module>
                    a.sort()
                TypeError: '<' not supported between instances of 'str' and 'int'
                >>> #字符串和数字不能进行比较
                >>> 
                >>> a=[1,2,3,4,5,6]
                >>> a.sort()
                >>> a[0]=100
                >>> a.sort()
                >>> 
                >>> a
                [2, 3, 4, 5, 6, 100]
                >>> a.reserve()
                Traceback (most recent call last):
                  File "<pyshell#24>", line 1, in <module>
                    a.reserve()
                AttributeError: 'list' object has no attribute 'reserve'
                >>> a.reverse()
                >>> a
                [100, 6, 5, 4, 3, 2]
                >>> #通过以上的错误操作。。。用sort排序，用reverse反转
                >>> len(a)
                6
                >>> #len求长度
                >>> sorted(a)
                [2, 3, 4, 5, 6, 100]
                >>> a
                [100, 6, 5, 4, 3, 2]
                >>> #从上面操作看出，sorted可以输出一个已经排序的列表，但它不影响原来列表
                >>> #range()函数可以自动生成一系列整数
                >>> range(1,101)
                range(1, 101)
                >>> list(range(1,101))
                [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
                >>> #range(a,b)==a~b-1的整数
                >>> for i in range(1,101)
                SyntaxError: invalid syntax
                >>> #for  后面要加冒号。。。。。
                >>> for i in range(1,101):
                  print (i)


                1
                2
                3
                4
                5
                6
                7
                8
                9
                10
                11
                12
                13
                14
                15
                16
                17
                18
                19
                20
                21
                22
                23
                24
                25
                26
                27
                28
                29
                30
                31
                32
                33
                34
                35
                36
                37
                38
                39
                40
                41
                42
                43
                44
                45
                46
                47
                48
                49
                50
                51
                52
                53
                54
                55
                56
                57
                58
                59
                60
                61
                62
                63
                64
                65
                66
                67
                68
                69
                70
                71
                72
                73
                74
                75
                76
                77
                78
                79
                80
                81
                82
                83
                84
                85
                86
                87
                88
                89
                90
                91
                92
                93
                94
                95
                96
                97
                98
                99
                100
                >>> #可以用range函数产生的数据作为列表的下标
                >>> a=[1,2,3,4,5,6,7]
                >>> for i in range(0,7):
                  print (a[i])


                1
                2
                3
                4
                5
                6
                7
                >>> 



3.          a=[]
            for i in range(0,10):
              b=i**2
              a.append(b)
            print (a)
